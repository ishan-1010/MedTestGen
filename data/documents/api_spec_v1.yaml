openapi: 3.0.0
info:
  title: HealthFirst E-Commerce API
  version: 1.0.0
  description: API for HealthFirst medical e-commerce platform

servers:
  - url: https://api.healthfirst.com
    description: Production server
  - url: https://staging-api.healthfirst.com
    description: Staging server

paths:
  /api/v1/users/register:
    post:
      summary: Register a new user
      tags:
        - Authentication
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                firstName:
                  type: string
                  minLength: 1
                  maxLength: 50
                  example: "John"
                lastName:
                  type: string
                  minLength: 1
                  maxLength: 50
                  example: "Doe"
                email:
                  type: string
                  format: email
                  example: "john.doe@example.com"
                password:
                  type: string
                  format: password
                  minLength: 8
                  pattern: "^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[@$!%*?&])[A-Za-z\\d@$!%*?&]{8,}$"
                  example: "Password123!"
                confirmPassword:
                  type: string
                  format: password
                  example: "Password123!"
                termsAccepted:
                  type: boolean
                  example: true
                marketingOptIn:
                  type: boolean
                  example: false
              required:
                - firstName
                - lastName
                - email
                - password
                - confirmPassword
                - termsAccepted
      responses:
        '201':
          description: User created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  userId:
                    type: string
                    format: uuid
                    example: "550e8400-e29b-41d4-a716-446655440000"
                  message:
                    type: string
                    example: "Registration successful. Please check your email for verification."
                  email:
                    type: string
                    example: "john.doe@example.com"
        '400':
          description: Bad Request - Invalid input
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Validation failed"
                  details:
                    type: array
                    items:
                      type: object
                      properties:
                        field:
                          type: string
                        message:
                          type: string
        '409':
          description: Conflict - User with this email already exists
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Email already registered"
        '429':
          description: Too Many Requests - Rate limit exceeded
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Too many registration attempts. Please try again later."
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "An unexpected error occurred"

  /api/v1/users/verify-email:
    get:
      summary: Verify user email address
      tags:
        - Authentication
      parameters:
        - name: token
          in: query
          required: true
          schema:
            type: string
          description: Verification token sent via email
      responses:
        '200':
          description: Email verified successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Email verified successfully"
        '400':
          description: Invalid or expired token
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Invalid or expired verification token"

  /api/v1/users/login:
    post:
      summary: User login
      tags:
        - Authentication
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  format: email
                password:
                  type: string
                  format: password
              required:
                - email
                - password
      responses:
        '200':
          description: Login successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
                    description: JWT authentication token
                  refreshToken:
                    type: string
                    description: Refresh token for token renewal
                  user:
                    type: object
                    properties:
                      userId:
                        type: string
                      email:
                        type: string
                      firstName:
                        type: string
                      lastName:
                        type: string
        '401':
          description: Invalid credentials
        '403':
          description: Account not verified

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

